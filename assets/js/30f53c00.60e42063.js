"use strict";(self.webpackChunkumlcloudcomputing=self.webpackChunkumlcloudcomputing||[]).push([[1415],{1577:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"projects/Immersion/Project Design/Product Onboarding","title":"Onboarding","description":"Immersion Product Onboarding abstract flow","source":"@site/docs/projects/Immersion/Project Design/Product Onboarding.md","sourceDirName":"projects/Immersion/Project Design","slug":"/projects/Immersion/Project Design/Product Onboarding","permalink":"/docs/projects/Immersion/Project Design/Product Onboarding","draft":false,"unlisted":false,"editUrl":"https://github.com/UMLCloudComputing/UMLCloudComputing.github.io/edit/main/docs/projects/Immersion/Project Design/Product Onboarding.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"description":"Immersion Product Onboarding abstract flow"},"sidebar":"projectSidebar","previous":{"title":"What To Know","permalink":"/docs/projects/Immersion/onboarding"},"next":{"title":"Immersion-Dashboard","permalink":"/docs/category/immersion-dashboard"}}');var i=r(4848),t=r(8453);const s={sidebar_position:1,description:"Immersion Product Onboarding abstract flow"},c="Onboarding",d={},l=[{value:"Recurrent:",id:"recurrent",level:2},{value:"Steps:",id:"steps",level:2}];function a(e){const n={em:"em",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"onboarding",children:"Onboarding"})}),"\n",(0,i.jsx)(n.h2,{id:"recurrent",children:"Recurrent:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Per School Year","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Populate Club Info DB"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"steps",children:"Steps:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Search onboarding DB for Club Name","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"If not found, ask if new"}),"\n",(0,i.jsx)(n.li,{children:"Make Service API call to search for club - LAMBDA FUNCTION"}),"\n",(0,i.jsx)(n.li,{children:"Repeat until found - LAMBDA FUNCTION"}),"\n",(0,i.jsxs)(n.li,{children:["Once found, create onboarding DB entry for club in SQS queue. - LAMBDA FUNCTION","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Leave marked as ",(0,i.jsx)(n.em,{children:"unregistered"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Get Club data object, validate unregistered"}),"\n",(0,i.jsx)(n.li,{children:"Mark as registered"}),"\n",(0,i.jsx)(n.li,{children:"Associate Discord Server ID (WIP?)"}),"\n",(0,i.jsx)(n.li,{children:"Call Lambda function to make service API call and place parsed object into SQS queue service for prod DB"}),"\n",(0,i.jsx)(n.li,{children:"Add Discord Service DB entry with secondary key of production DB club ID."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>c});var o=r(6540);const i={},t=o.createContext(i);function s(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);