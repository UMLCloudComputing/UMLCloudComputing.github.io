"use strict";(self.webpackChunkumlcloudcomputing=self.webpackChunkumlcloudcomputing||[]).push([[5628],{2496:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"activities/PhotoSky/Part 1: AWS Infrastructure and Backend/designing-backend-architecture","title":"\u270d Designing Backend Architecture","description":"In this section, we\'ll dive into the backend architecture of our PhotoSky application. We\'ll explore the AWS services we\'re using, why we chose them, and how they work together to create a scalable, serverless backend.","source":"@site/docs/activities/PhotoSky/Part 1: AWS Infrastructure and Backend/3-designing-backend-architecture.md","sourceDirName":"activities/PhotoSky/Part 1: AWS Infrastructure and Backend","slug":"/activities/part-1-aws-infrastructure-and-backend/3-designing-backend-architecture","permalink":"/docs/activities/part-1-aws-infrastructure-and-backend/3-designing-backend-architecture","draft":false,"unlisted":false,"editUrl":"https://github.com/UMLCloudComputing/UMLCloudComputing.github.io/edit/main/docs/activities/PhotoSky/Part 1: AWS Infrastructure and Backend/3-designing-backend-architecture.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"slug":"/activities/part-1-aws-infrastructure-and-backend/3-designing-backend-architecture"},"sidebar":"activitiesSidebar","previous":{"title":"\ud83c\udfde\ufe0f Setting Up Your AWS Environment","permalink":"/docs/activities/part-1-aws-infrastructure-and-backend/2-setting-up-aws-environment"},"next":{"title":"\ud83d\udd4b Implementing AWS CDK Stack","permalink":"/docs/activities/part-1-aws-infrastructure-and-backend/4-implementing-aws-cdk-stack"}}');var r=i(4848),a=i(8453);const s={sidebar_position:3,slug:"/activities/part-1-aws-infrastructure-and-backend/3-designing-backend-architecture"},o="\u270d Designing Backend Architecture",c={},l=[{value:"Overview of PhotoSky&#39;s Backend Architecture",id:"overview-of-photoskys-backend-architecture",level:2},{value:"\ud83e\udea3 Amazon S3 (Simple Storage Service)",id:"-amazon-s3-simple-storage-service",level:2},{value:"AWS Lambda",id:"aws-lambda",level:2},{value:"\ud83c\udf01 Amazon API Gateway",id:"-amazon-api-gateway",level:2},{value:"\ud83e\uddf0 AWS CDK (Cloud Development Kit)",id:"-aws-cdk-cloud-development-kit",level:2},{value:"Putting It All Together",id:"putting-it-all-together",level:2},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"-designing-backend-architecture",children:"\u270d Designing Backend Architecture"})}),"\n",(0,r.jsx)(n.p,{children:"In this section, we'll dive into the backend architecture of our PhotoSky application. We'll explore the AWS services we're using, why we chose them, and how they work together to create a scalable, serverless backend."}),"\n",(0,r.jsx)(n.h2,{id:"overview-of-photoskys-backend-architecture",children:"Overview of PhotoSky's Backend Architecture"}),"\n",(0,r.jsx)(n.p,{children:"PhotoSky uses a serverless architecture built on AWS. Here's a high-level overview of our backend components:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Amazon S3 (Simple Storage Service)"}),": For storing images"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"AWS Lambda"}),": For running our backend logic"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Amazon API Gateway"}),": For creating a RESTful API"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"AWS CDK (Cloud Development Kit)"}),": For defining and provisioning our AWS infrastructure"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Let's explore each of these components in detail."}),"\n",(0,r.jsx)(n.h2,{id:"-amazon-s3-simple-storage-service",children:"\ud83e\udea3 Amazon S3 (Simple Storage Service)"}),"\n",(0,r.jsx)(n.p,{children:"Amazon S3 is an object storage service that offers industry-leading scalability, data availability, security, and performance."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Why S3 for PhotoSky?"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Scalable storage: S3 can store virtually unlimited amounts of data."}),"\n",(0,r.jsx)(n.li,{children:"High durability and availability: S3 is designed for 99.999999999% (11 9's) of durability."}),"\n",(0,r.jsx)(n.li,{children:"Security: S3 offers strong encryption and access control mechanisms."}),"\n",(0,r.jsx)(n.li,{children:"Cost-effective: You only pay for what you use."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"In our application, S3 will store all the images uploaded by users."}),"\n",(0,r.jsx)(n.h2,{id:"aws-lambda",children:"AWS Lambda"}),"\n",(0,r.jsx)(n.p,{children:"AWS Lambda is a serverless compute service that lets you run code without provisioning or managing servers."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Why Lambda for PhotoSky?"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Serverless: No need to manage servers."}),"\n",(0,r.jsx)(n.li,{children:"Auto-scaling: Lambda automatically scales your application by running code in response to each trigger."}),"\n",(0,r.jsx)(n.li,{children:"Pay-per-use: You're only charged for the compute time you consume."}),"\n",(0,r.jsx)(n.li,{children:"Supports multiple programming languages: We're using Python for our Lambda functions."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"In PhotoSky, Lambda functions will handle operations like generating presigned URLs for S3, creating image previews, and managing image metadata."}),"\n",(0,r.jsx)(n.h2,{id:"-amazon-api-gateway",children:"\ud83c\udf01 Amazon API Gateway"}),"\n",(0,r.jsx)(n.p,{children:"Amazon API Gateway is a fully managed service that makes it easy for developers to create, publish, maintain, monitor, and secure APIs at any scale."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Why API Gateway for PhotoSky?"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"RESTful API creation: Easily create a RESTful API that our frontend can interact with."}),"\n",(0,r.jsx)(n.li,{children:"Integration with Lambda: Seamlessly connect our API endpoints to our Lambda functions."}),"\n",(0,r.jsx)(n.li,{children:"Security: Provides features like AWS IAM integration, CORS support, and more."}),"\n",(0,r.jsx)(n.li,{children:"Scalability: Can handle any number of API calls."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"API Gateway will serve as the entry point for our frontend, routing requests to the appropriate Lambda functions."}),"\n",(0,r.jsx)(n.h2,{id:"-aws-cdk-cloud-development-kit",children:"\ud83e\uddf0 AWS CDK (Cloud Development Kit)"}),"\n",(0,r.jsx)(n.p,{children:"While not a part of the runtime architecture, AWS CDK is crucial for defining and provisioning our infrastructure."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Why CDK for PhotoSky?"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Infrastructure as Code: Define cloud infrastructure using familiar programming languages (we're using Python)."}),"\n",(0,r.jsx)(n.li,{children:"Reusable components: Create and share reusable infrastructure components."}),"\n",(0,r.jsx)(n.li,{children:"AWS best practices: CDK encapsulates AWS best practices."}),"\n",(0,r.jsx)(n.li,{children:"Easy updates: Simplifies the process of updating and versioning our infrastructure."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"putting-it-all-together",children:"Putting It All Together"}),"\n",(0,r.jsx)(n.p,{children:"Here's how these components work together in PhotoSky:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"The frontend sends requests to API Gateway endpoints."}),"\n",(0,r.jsx)(n.li,{children:"API Gateway routes these requests to the appropriate Lambda function."}),"\n",(0,r.jsxs)(n.li,{children:["Lambda functions perform operations, which may include:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Generating presigned URLs for S3 uploads/downloads"}),"\n",(0,r.jsx)(n.li,{children:"Creating image previews"}),"\n",(0,r.jsx)(n.li,{children:"Managing image metadata"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"S3 stores the actual image files."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Here's a diagram of this architecture:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"+----------+     +---------------+     +-----------------+\n| Frontend | --\x3e | API Gateway   | --\x3e | Lambda Function |\n+----------+     +---------------+     +-----------------+\n                                               |\n                                               v\n                                        +-------------+\n                                        | Amazon S3   |\n                                        +-------------+\n"})}),"\n",(0,r.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,r.jsx)(n.p,{children:"This serverless architecture provides a scalable, maintainable, and cost-effective backend for PhotoSky. By leveraging these AWS services, we can focus on building application features without worrying about infrastructure management."}),"\n",(0,r.jsx)(n.p,{children:"In the next section, we'll dive deeper into implementing this architecture using AWS CDK. We'll go through the CDK code in detail and deploy our backend to AWS."})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>o});var t=i(6540);const r={},a=t.createContext(r);function s(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);