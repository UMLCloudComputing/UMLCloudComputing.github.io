"use strict";(self.webpackChunkumlcloudcomputing=self.webpackChunkumlcloudcomputing||[]).push([[4058],{4588:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var r=i(4848),n=i(8453);const s={sidebar_position:2},o="Getting Started",c={id:"resources/Git Version Control/Basics/Getting Started",title:"Getting Started",description:"Creating a Git folder",source:"@site/docs/resources/Git Version Control/Basics/Getting Started.md",sourceDirName:"resources/Git Version Control/Basics",slug:"/resources/Git Version Control/Basics/Getting Started",permalink:"/docs/resources/Git Version Control/Basics/Getting Started",draft:!1,unlisted:!1,editUrl:"https://github.com/UMLCloudComputing/UMLCloudComputing.github.io/edit/main/docs/resources/Git Version Control/Basics/Getting Started.md",tags:[],version:"current",lastUpdatedBy:"Steve",lastUpdatedAt:1729210471e3,sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"resourcesSidebar",previous:{title:"Git Basics",permalink:"/docs/resources/Git Version Control/Basics/Git Basics"},next:{title:"New Files",permalink:"/docs/resources/Git Version Control/Basics/New Files"}},a={},d=[{value:"Creating a Git folder",id:"creating-a-git-folder",level:2},{value:"Initialize Git",id:"initialize-git",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"getting-started",children:"Getting Started"})}),"\n",(0,r.jsx)(t.h2,{id:"creating-a-git-folder",children:"Creating a Git folder"}),"\n",(0,r.jsx)(t.p,{children:"Creating a new folder for a project:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"[user@localhost] $ mkdir newProject\n[user@localhost] $ cd newProject\n"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"/docs/resources/Git%20Version%20Control/Basics/#mkdir",children:(0,r.jsx)(t.code,{children:"mkdir"})})," makes a new directory. ",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(t.a,{href:"/docs/resources/Git%20Version%20Control/Basics/#cd",children:(0,r.jsx)(t.code,{children:"cd"})})," changes the current working directory."]}),"\n",(0,r.jsx)(t.h2,{id:"initialize-git",children:"Initialize Git"}),"\n",(0,r.jsx)(t.p,{children:"Once in the correct folder, initialize git on the folder:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"[user@localhost] $ git init\n                   Initialized empty Git repository in /User/user/newProject/.git/\n"})}),"\n",(0,r.jsx)(t.p,{children:"New Git repository created!"}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsx)(t.p,{children:"Git automatically knows to watch this folder for changes."})})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>c});var r=i(6540);const n={},s=r.createContext(n);function o(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);